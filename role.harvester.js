var creepManager = require('creep.manager');
require('prototype.creep')();

/** @param {Creep} creep **/
module.exports = function(creep) {
    
    if (creep.IsDying()) {
        creep.PrepareToDie();
        return;
    }

    if (!creep.memory.harvesting && creep.store[RESOURCE_ENERGY] == 0) {
        creep.memory.harvesting = true;
        creep.ClearDestination();
        creep.say('‚õè harvest');
    }
    if (creep.memory.harvesting && creep.store.getFreeCapacity(RESOURCE_ENERGY) == 0) {
        creep.memory.harvesting = false;
        creep.ClearDestination();
        creep.say('üì¶ deliver');
    }
    
    if(!creep.memory.harvesting) {
        // –ï–¥–µ–º –≤–ª–∏–≤–∞—Ç—å —ç–Ω–µ—Ä–≥–∏—é –≤ –±–ª–∏–∂–∞–π—à—É—é –ø–æ—Å—Ç—Ä–æ–π–∫—É
        var closest = creep.FindClosestStorage(creep.room, [STRUCTURE_EXTENSION, STRUCTURE_SPAWN]);
        if (closest) {
            if(creep.transfer(closest, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE)
                creep.moveTo(closest, {visualizePathStyle: {stroke: '#ffffff'}});
        }
        else {
            // –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ü–µ–ª–µ–π –¥–ª—è –≤–ª–∏–≤–∞ —ç–Ω–µ—Ä–≥–∏–∏, –ø—ã—Ç–∞–µ–º—Å—è –≤–ª–∏–≤–∞—Ç—å –≤ –±–∞—à–Ω—é
            var closest = creep.FindClosestStorage(creep.room, [STRUCTURE_TOWER]);
            if (closest) {
                if(creep.transfer(closest, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE)
                    creep.moveTo(closest, {visualizePathStyle: {stroke: '#ffffff'}});
            }
            else {
                // –í—Å–µ –ø—Ä–∏—Å—Ç—Ä–æ–π–∫–∏ –∏ –≤–∞–∂–Ω—ã–µ –∑–¥–∞–Ω–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã —ç–Ω–µ—Ä–≥–∏–µ–π
                creep.Idle();
            }
            
        }
    }
    else {
        creep.FetchEnergy();
    }
	
};